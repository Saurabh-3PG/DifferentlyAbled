{"ast":null,"code":"var _jsxFileName = \"/Users/saurabh.anand/Documents/Project/3pillarGlobal/differentlyabled/src/components/Typography/index.js\";\nimport React from 'react';\nimport { Row, Image } from 'react-bootstrap';\nimport headingUsingDiv from '../../Images/heading-using-div.png';\nimport headingUsinghTag from '../../Images/heading-using-hTag.png';\nimport paragraph from '../../Images/paragraph.png';\nimport listdefault from '../../Images/list-hTag.png';\nexport class Typography extends React.Component {\n  render(props) {\n    return React.createElement(\"div\", {\n      id: \"typography\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Adding Heading\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"There are six heading elements \\u2014 \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h1>\"), \", \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h2>\"), \", \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h3>\"), \", \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h4>\"), \" , \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h5>\"), \", and \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h6>\"), \". Each element represents a different level of content in the document; \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h1>\"), \" represents the main heading, \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h2>\"), \" represents subheadings, \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"<h3>\"), \" represents sub-subheadings, and so on.\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Different ways of creating headings\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Using default heading tag ie: h1 h2 h3 ... h6\", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Using default html header tag, we donot required to add any additional aria to make it heading\"), React.createElement(Image, {\n      src: headingUsinghTag,\n      alt: \"heading Using html heading Tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Converting any div level element to header using html aria attributes\", React.createElement(\"div\", {\n      role: \"heading\",\n      \"aria-level\": \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Creating header using aria attributes.\"), React.createElement(Image, {\n      src: headingUsingDiv,\n      alt: \"heading Using aria attribute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      className: \"paragraph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Adding Paragraphs\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Paragraph styles are used to add meaning to body copy. A theme usually has at least a primary and secondary style for it's body copy, with sometimes additional styles to add emphasis or deemphasis depending on use.\"), React.createElement(Image, {\n      src: paragraph,\n      alt: \"paragraph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Row, {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Adding List\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Different ways of creating headings\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Adding list using default HTML list tags\", React.createElement(Image, {\n      src: listdefault,\n      alt: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Forcing any element to behave as list using aria attributes\", React.createElement(Image, {\n      src: listdefault,\n      alt: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/saurabh.anand/Documents/Project/3pillarGlobal/differentlyabled/src/components/Typography/index.js"],"names":["React","Row","Image","headingUsingDiv","headingUsinghTag","paragraph","listdefault","Typography","Component","render","props"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Row, Image } from 'react-bootstrap';\nimport headingUsingDiv from '../../Images/heading-using-div.png';\nimport headingUsinghTag from '../../Images/heading-using-hTag.png';\nimport paragraph from '../../Images/paragraph.png';\nimport listdefault from '../../Images/list-hTag.png';\n\nexport class Typography extends React.Component {\n\n    render(props) {\n        return (\n            <div id=\"typography\">\n                <Row className=\"heading\">\n                    <h1>Adding Heading</h1>\n                    <p>\n                        There are six heading elements — <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, <code>&lt;h4&gt;</code> , <code>&lt;h5&gt;</code >, and <code>&lt;h6&gt;</code >. Each element represents a different level of content in the document; <code>&lt;h1&gt;</code > represents the main heading, <code>&lt;h2&gt;</code > represents subheadings, <code>&lt;h3&gt;</code > represents sub-subheadings, and so on.\n                    </p>\n                    <h2>Different ways of creating headings</h2>\n                        <ol>\n                            <li>\n                                Using default heading tag ie: h1 h2 h3 ... h6\n\n                                <h3>Using default html header tag, we donot required to add any additional aria to make it heading</h3>\n                            <Image src={headingUsinghTag} alt=\"heading Using html heading Tag\" />\n\n                            </li>\n                            <li>Converting any div level element to header using html aria attributes\n                                <div role=\"heading\" aria-level=\"3\">Creating header using aria attributes.</div>\n                            <Image src={headingUsingDiv} alt=\"heading Using aria attribute\" />\n                            </li>\n                        </ol>\n                </Row>\n                <Row className=\"paragraph\">\n                    <h1>Adding Paragraphs</h1>\n                    \n                    <p>\n                        Paragraph styles are used to add meaning to body copy. A theme usually has at least a primary and secondary style for it's body copy, with sometimes additional styles to add emphasis or deemphasis depending on use.\n                    </p>\n\n                    <Image src={paragraph} alt=\"paragraph\" />\n                </Row>\n                <Row className=\"list\">\n                    <h1>Adding List</h1>\n                    <h2>Different ways of creating headings</h2>\n                    <ol>\n                        <li>\n                            Adding list using default HTML list tags\n                            <Image src={listdefault} alt=\"list\" />\n                        </li>\n                        <li>\n                            Forcing any element to behave as list using aria attributes\n                            <Image src={listdefault} alt=\"list\" />\n                        </li>\n                    </ol>\n                </Row>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}