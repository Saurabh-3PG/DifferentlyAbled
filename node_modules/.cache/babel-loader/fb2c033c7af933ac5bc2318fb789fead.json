{"ast":null,"code":"var _jsxFileName = \"/Users/saurabh.anand/Documents/Project/3pillarGlobal/differentlyabled/src/components/Checkbox.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nexport class Checkbox extends React.PureComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = e => {\n      // console.log(e.target.checked);\n      this.setState({\n        checked: !e.target.checked\n      });\n\n      if (this.props.onChange) {\n        this.props.onChange(!e.target.checked);\n      }\n    };\n\n    this.state = {\n      checked: props.checked || false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          checked = _this$props.checked,\n          label = _this$props.label;\n    this.setState.checked = checked;\n    return React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: id,\n      type: \"checkbox\",\n      name: \"test\",\n      checked: this.state.checked,\n      \"aria-checked\": this.state.checked,\n      onChange: this.handleChange,\n      onKeyPress: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), label);\n  }\n\n}\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};","map":{"version":3,"sources":["/Users/saurabh.anand/Documents/Project/3pillarGlobal/differentlyabled/src/components/Checkbox.js"],"names":["React","PropTypes","Checkbox","PureComponent","constructor","props","context","handleChange","e","setState","checked","target","onChange","state","bind","render","id","label","propTypes","string","isRequired","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,KAAK,CAACG,aAA7B,CAA2C;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;;AAD0B,SAQ5BC,YAR4B,GAQbC,CAAC,IAAI;AAClB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE,CAACF,CAAC,CAACG,MAAF,CAASD;AAApB,OAAd;;AACA,UAAG,KAAKL,KAAL,CAAWO,QAAd,EAAwB;AACtB,aAAKP,KAAL,CAAWO,QAAX,CAAoB,CAACJ,CAAC,CAACG,MAAF,CAASD,OAA9B;AACD;AACF,KAd2B;;AAE1B,SAAKG,KAAL,GAAa;AACXH,MAAAA,OAAO,EAAEL,KAAK,CAACK,OAAN,IAAiB;AADf,KAAb;AAGA,SAAKH,YAAL,GAAoB,KAAKA,YAAL,CAAkBO,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAUDC,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKV,KAD7B;AAAA,UACCW,EADD,eACCA,EADD;AAAA,UACKN,OADL,eACKA,OADL;AAAA,UACcO,KADd,eACcA,KADd;AAEP,SAAKR,QAAL,CAAcC,OAAd,GAAwBA,OAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAEM,EADN;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWH,OAJtB;AAKE,sBAAc,KAAKG,KAAL,CAAWH,OAL3B;AAME,MAAA,QAAQ,EAAE,KAAKH,YANjB;AAOE,MAAA,UAAU,EAAE,KAAKA,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUGU,KAVH,CADF;AAcD;;AAlC+C;AAqClDf,QAAQ,CAACgB,SAAT,GAAqB;AACnBF,EAAAA,EAAE,EAAEf,SAAS,CAACkB,MAAV,CAAiBC,UADF;AAEnBH,EAAAA,KAAK,EAAEhB,SAAS,CAACkB,MAAV,CAAiBC,UAFL;AAGnBV,EAAAA,OAAO,EAAET,SAAS,CAACoB,IAHA;AAInBT,EAAAA,QAAQ,EAAEX,SAAS,CAACqB;AAJD,CAArB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Checkbox extends React.PureComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      checked: props.checked || false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = e => {\n    // console.log(e.target.checked);\n    this.setState({checked: !e.target.checked});\n    if(this.props.onChange) {\n      this.props.onChange(!e.target.checked);\n    }\n  };\n\n  render() {\n    const { id, checked, label } = this.props;\n    this.setState.checked = checked\n    return (\n      <label>\n        <input\n          id={id}\n          type=\"checkbox\"\n          name=\"test\"\n          checked={this.state.checked}\n          aria-checked={this.state.checked}\n          onChange={this.handleChange}\n          onKeyPress={this.handleChange}\n        />\n        {label}\n      </label>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}